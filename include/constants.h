#define EEPROM_ADDRESS 0x50

#define FB 0
#define WIFISSID 1
#define WIFIPW 2
#define SOFTSSID 3
#define SOFTPW 4
#define USERNAME 5
#define IPADDRESS 6
#define GATEWAY 7
#define DEVICETOKEN 8
#define USERPASS 9

#define FB_CONNECTED 0
#define FB_WIFI_ERROR1 1
#define FB_WIFI_ERROR2 2

#define DHTPIN 13
#define DHTTYPE DHT11

#define DATA595 15
#define LATCH595 2
#define CLOCK595 0

// QA to QH of 595, in sort
#define SFT_LED_STATUS 0
#define SFT_AUX2_RELAY 1
#define SFT_AUX1_RELAY 2
#define SFT_HEATER_RELAY 3
#define SFT_COOLER_RELAY 4
#define SFT_MUX_A 5
#define SFT_MUX_B 6
#define SFT_BUZZER 7

#define ONE_WIRE_BUS 13

#define REQUEST_DELAY 1000
#define SENSOR_DELAY 1000
#define DHT_LOOP 5                     // Means that DHT will sample once every 5 sample of DS18B20
#define MAXIMUM_DISCONNECT_TIME 900000 // Maximum WiFi disconnection time or server request time out before rollback to AP Mode and reset FB

// address 602 is 362
#define PROG_LENGTH 366
#define ADDR_DEVICE_STATUS 241
// 242 is deprecated int setpoint
// 243 is deprecated int setpoint
#define ADDR_HEATER_KP 244
#define ADDR_HEATER_KI 248
#define ADDR_HEATER_KD 252
#define ADDR_HEATER_DS 256
#define ADDR_HEATER_BA 260
#define ADDR_HEATER_BB 264
#define ADDR_COOLER_KP 268
#define ADDR_COOLER_KI 272
#define ADDR_COOLER_KD 276
#define ADDR_COOLER_DS 280
#define ADDR_COOLER_BA 284
#define ADDR_COOLER_BB 288
#define ADDR_PROG_TRIGGER(x) (292 + (x * 10))
#define ADDR_PROG_RB1(x) (293 + (x * 10))
#define ADDR_PROG_RB2(x) (297 + (x * 10))
#define ADDR_PROG_ACTION(x) (301 + (x * 10))
#define ADDR_HTCL_MODE 602
#define ADDR_THERMAL_SETPOINT 603

#define BITPOS_AUX1_STATUS 0
#define BITPOS_AUX2_STATUS 1
#define BITPOS_TC_STATUS 2
#define BITPOS_TC_OPERATION 3 // 0 is MANUAL MODE, 1 is AUTO MODE
#define BITPOS_TC_MODE_B0 4   // B00 is HEATER MODE, B01 is COOLER MODE
#define BITPOS_TC_MODE_B1 5   // B11 is DUAL MODE
#define BITPOS_HEATER_STATUS 6
#define BITPOS_COOLER_STATUS 7
#define BITPOS_HEATER_MODE 0 // 0 is PID MODE, 1 is HYSTERESIS MOD
#define BITPOS_COOLER_MODE 1

#define MODE_PID 0
#define MODE_HYSTERESIS 1
#define MODE_OPERATION_MANUAL 0
#define MODE_OPERATION_AUTO 1

static const char requestURL[] PROGMEM = "http://192.168.7.220:8080/otoma/api/nexusControllerRequest.php";
static const char identifyURL[] PROGMEM = "http://192.168.7.220:8080/otoma/api/identifyDevice.php";
// This is the minified file of html document to reduce flash usage
// minified is 4857 byte
// unminified is 6358 byte, which is 23.6% saving!
// Original file is testssid.php on xampp htdocs
static const char htmlDoc[] PROGMEM = R"=====(
<!DOCTYPE html><html lang="en"><head> <meta charset="UTF-8"/> <meta name="viewport" content="width=device-width, initial-scale=1.0"/> <title>Otoma Nexus Controller</title> <style>:root{--normalcolor: #011627; --failcolor: #f51000; --successcolor: #00ad17; --main-bg-color: #e4dfda; --second-color: #6a3937; --third-color: #011627; --fourth-color: #9d79bc; --fifth-color: #2374ab;}html{font-family: Helvetica, sans-serif; display: inline-block; text-align: center; color: var(--third-color);}body{margin-top: 50px; margin-left: auto; background-color: var(--main-bg-color);}h1{columns: #444444; margin: 50px auto 30px;}h3{color: #444444; margin-bottom: 50px;}.isian{width: 40%; height: 24px; margin-right: 2%;}.tombolsubmit{margin-top: 2%; margin-left: -2%; width: 84%;}</style></head><body> <h2 id="hd">Masukkan informasi</h2> <div style="width: 100vw; height: 100px; margin-bottom:25px;"> <input type="text" placeholder="SSID/Nama WiFi" class="isian" id="ssid"/> <input type="text" placeholder="Username Akun" class="isian" id="usrn"/> <br/><br/> <input type="password" placeholder="Password WiFi" class="isian" id="wfpw"/> <input type="password" placeholder="Password akun" class="isian" id="unpw"/> <br><input type="checkbox" id="spw" name="spw" value="show" onclick="showPassword();"> <label for="spw"> Tampilkan Password</label> <br><button class="tombolsubmit" onclick="sendInputInfo();">Submit</button> </div><br/><br><span style="color: var(--normalcolor);" id="ds"></span> <br><br><button onclick="restart();">Restart Kontroller</button> <br><h3 style="background-color:red;width:100vw;" id="tm"> Belum termuat </h3> <script>function requestAJAX(url, data, callback=function(){}){var xhr=new XMLHttpRequest(); xhr.open("POST", url); xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded"); xhr.send(data); xhr.onload=function(){if (xhr.status==200 && xhr.readyState==4){callback(xhr.responseText);}};}function sendInputInfo(){document.getElementById("ds").innerHTML="Mengolah dan mengirim data yang dimasukkan, kontroller akan memutuskan Access Point, tolong tunggu maksimal 30 detik.<br>Setelah Access Point kontroller ini tersedia kembali, hubungkan wifi tersebut lagi lalu masuk laman ini atau 192.168.4.1 sekali lagi untuk mendapat laporan status."; requestAJAX("accInfo", "ssid=" + document.getElementById("ssid").value + "&wfpw=" + document.getElementById("wfpw").value + "&usrn=" + document.getElementById("usrn").value + "&unpw=" + document.getElementById("unpw").value);}function restart(){requestAJAX("restart", "", function(response){document.getElementById("ds").innerHTML="Merestart perangkat dan akan memutus Access Point...";});}function showPassword(){if (document.getElementById("spw").checked){document.getElementById("unpw").type="text"; document.getElementById("wfpw").type="text";}else{document.getElementById("unpw").type="password"; document.getElementById("wfpw").type="password";}}window.onload=function(){requestAJAX("reqStatus", "", function(response){response=JSON.parse(response); document.getElementById("ssid").value=response.ssid; document.getElementById("wfpw").value=response.wfpw; document.getElementById("usrn").value=response.usrn; document.getElementById("unpw").value=response.unpw; document.getElementById("tm").style.backgroundColor="green"; document.getElementById("tm").innerHTML="Berhasil termuat"; if (response.message=="success") document.getElementById("ds").innerHTML="Berhasil menghubungkan akun anda dengan kontroller<br>restart kontroller dengan tombol yang tersedia, lalu kontroller akan dapat dioperasikan secara online di otoma.my.id"; else if (response.message=="wrongid") document.getElementById("ds").innerHTML="Username akun otoma yang anda masukkan tidak terdaftar"; else if (response.message=="wrongpw") document.getElementById("ds").innerHTML="Password akun otoma yang anda masukkan salah"; else if (response.message=="illegal") document.getElementById("ds").innerHTML="Kontroller anda ILLEGAL, apabila anda tidak yakin tolong hubungi kami di otoma.my.id"; else if (response.message=="nocon") document.getElementById("ds").innerHTML="Tidak didapatkan respon dari server, tolong coba lagi sesaat kemudian serta pastikan WiFi anda dapat terkoneksi dengan internet"; else if (response.message=="recon") document.getElementById("ds").innerHTML="Berhasil menghubungkan kembali kontroller dengan akun anda, restart kontroller dengan tombol yang tersedia, lalu kontroller akan dapat dioperasikan secara online di otoma.my.id"; else if (response.message=="used") document.getElementById("ds").innerHTML="Gagal menyambung. Perangkat anda sudah tersambung ke akun lain, mohon hubungkan kontroller ini dengan akun yang terhubung dengan kontroller ini. Apabila anda tidak yakin tolong kontak kami di otoma.my.id"; else if (response.message=="invwifi") document.getElementById("ds").innerHTML="Gagal menyambung ke WiFi, pastikan SSID dan Password WiFi anda benar lalu coba lagi"; else if (response.message=="smwrong") document.getElementById("ds").innerHTML="Terjadi kesalahan saat mengirim data ke server, mohon coba lagi sesaat kemudian";});}; </script></body></html>
)=====";

// CA Certificate of DigiCert Baltimore
const unsigned char caCert[] PROGMEM = {
    0x30, 0x82, 0x03, 0x77, 0x30, 0x82, 0x02, 0x5f, 0xa0, 0x03, 0x02, 0x01,
    0x02, 0x02, 0x04, 0x02, 0x00, 0x00, 0xb9, 0x30, 0x0d, 0x06, 0x09, 0x2a,
    0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x05, 0x05, 0x00, 0x30, 0x5a,
    0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x49,
    0x45, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x13, 0x09,
    0x42, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x6f, 0x72, 0x65, 0x31, 0x13, 0x30,
    0x11, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x13, 0x0a, 0x43, 0x79, 0x62, 0x65,
    0x72, 0x54, 0x72, 0x75, 0x73, 0x74, 0x31, 0x22, 0x30, 0x20, 0x06, 0x03,
    0x55, 0x04, 0x03, 0x13, 0x19, 0x42, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x6f,
    0x72, 0x65, 0x20, 0x43, 0x79, 0x62, 0x65, 0x72, 0x54, 0x72, 0x75, 0x73,
    0x74, 0x20, 0x52, 0x6f, 0x6f, 0x74, 0x30, 0x1e, 0x17, 0x0d, 0x30, 0x30,
    0x30, 0x35, 0x31, 0x32, 0x31, 0x38, 0x34, 0x36, 0x30, 0x30, 0x5a, 0x17,
    0x0d, 0x32, 0x35, 0x30, 0x35, 0x31, 0x32, 0x32, 0x33, 0x35, 0x39, 0x30,
    0x30, 0x5a, 0x30, 0x5a, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04,
    0x06, 0x13, 0x02, 0x49, 0x45, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55,
    0x04, 0x0a, 0x13, 0x09, 0x42, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x6f, 0x72,
    0x65, 0x31, 0x13, 0x30, 0x11, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x13, 0x0a,
    0x43, 0x79, 0x62, 0x65, 0x72, 0x54, 0x72, 0x75, 0x73, 0x74, 0x31, 0x22,
    0x30, 0x20, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x19, 0x42, 0x61, 0x6c,
    0x74, 0x69, 0x6d, 0x6f, 0x72, 0x65, 0x20, 0x43, 0x79, 0x62, 0x65, 0x72,
    0x54, 0x72, 0x75, 0x73, 0x74, 0x20, 0x52, 0x6f, 0x6f, 0x74, 0x30, 0x82,
    0x01, 0x22, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d,
    0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0f, 0x00, 0x30, 0x82,
    0x01, 0x0a, 0x02, 0x82, 0x01, 0x01, 0x00, 0xa3, 0x04, 0xbb, 0x22, 0xab,
    0x98, 0x3d, 0x57, 0xe8, 0x26, 0x72, 0x9a, 0xb5, 0x79, 0xd4, 0x29, 0xe2,
    0xe1, 0xe8, 0x95, 0x80, 0xb1, 0xb0, 0xe3, 0x5b, 0x8e, 0x2b, 0x29, 0x9a,
    0x64, 0xdf, 0xa1, 0x5d, 0xed, 0xb0, 0x09, 0x05, 0x6d, 0xdb, 0x28, 0x2e,
    0xce, 0x62, 0xa2, 0x62, 0xfe, 0xb4, 0x88, 0xda, 0x12, 0xeb, 0x38, 0xeb,
    0x21, 0x9d, 0xc0, 0x41, 0x2b, 0x01, 0x52, 0x7b, 0x88, 0x77, 0xd3, 0x1c,
    0x8f, 0xc7, 0xba, 0xb9, 0x88, 0xb5, 0x6a, 0x09, 0xe7, 0x73, 0xe8, 0x11,
    0x40, 0xa7, 0xd1, 0xcc, 0xca, 0x62, 0x8d, 0x2d, 0xe5, 0x8f, 0x0b, 0xa6,
    0x50, 0xd2, 0xa8, 0x50, 0xc3, 0x28, 0xea, 0xf5, 0xab, 0x25, 0x87, 0x8a,
    0x9a, 0x96, 0x1c, 0xa9, 0x67, 0xb8, 0x3f, 0x0c, 0xd5, 0xf7, 0xf9, 0x52,
    0x13, 0x2f, 0xc2, 0x1b, 0xd5, 0x70, 0x70, 0xf0, 0x8f, 0xc0, 0x12, 0xca,
    0x06, 0xcb, 0x9a, 0xe1, 0xd9, 0xca, 0x33, 0x7a, 0x77, 0xd6, 0xf8, 0xec,
    0xb9, 0xf1, 0x68, 0x44, 0x42, 0x48, 0x13, 0xd2, 0xc0, 0xc2, 0xa4, 0xae,
    0x5e, 0x60, 0xfe, 0xb6, 0xa6, 0x05, 0xfc, 0xb4, 0xdd, 0x07, 0x59, 0x02,
    0xd4, 0x59, 0x18, 0x98, 0x63, 0xf5, 0xa5, 0x63, 0xe0, 0x90, 0x0c, 0x7d,
    0x5d, 0xb2, 0x06, 0x7a, 0xf3, 0x85, 0xea, 0xeb, 0xd4, 0x03, 0xae, 0x5e,
    0x84, 0x3e, 0x5f, 0xff, 0x15, 0xed, 0x69, 0xbc, 0xf9, 0x39, 0x36, 0x72,
    0x75, 0xcf, 0x77, 0x52, 0x4d, 0xf3, 0xc9, 0x90, 0x2c, 0xb9, 0x3d, 0xe5,
    0xc9, 0x23, 0x53, 0x3f, 0x1f, 0x24, 0x98, 0x21, 0x5c, 0x07, 0x99, 0x29,
    0xbd, 0xc6, 0x3a, 0xec, 0xe7, 0x6e, 0x86, 0x3a, 0x6b, 0x97, 0x74, 0x63,
    0x33, 0xbd, 0x68, 0x18, 0x31, 0xf0, 0x78, 0x8d, 0x76, 0xbf, 0xfc, 0x9e,
    0x8e, 0x5d, 0x2a, 0x86, 0xa7, 0x4d, 0x90, 0xdc, 0x27, 0x1a, 0x39, 0x02,
    0x03, 0x01, 0x00, 0x01, 0xa3, 0x45, 0x30, 0x43, 0x30, 0x1d, 0x06, 0x03,
    0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0xe5, 0x9d, 0x59, 0x30, 0x82,
    0x47, 0x58, 0xcc, 0xac, 0xfa, 0x08, 0x54, 0x36, 0x86, 0x7b, 0x3a, 0xb5,
    0x04, 0x4d, 0xf0, 0x30, 0x12, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01,
    0xff, 0x04, 0x08, 0x30, 0x06, 0x01, 0x01, 0xff, 0x02, 0x01, 0x03, 0x30,
    0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03,
    0x02, 0x01, 0x06, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7,
    0x0d, 0x01, 0x01, 0x05, 0x05, 0x00, 0x03, 0x82, 0x01, 0x01, 0x00, 0x85,
    0x0c, 0x5d, 0x8e, 0xe4, 0x6f, 0x51, 0x68, 0x42, 0x05, 0xa0, 0xdd, 0xbb,
    0x4f, 0x27, 0x25, 0x84, 0x03, 0xbd, 0xf7, 0x64, 0xfd, 0x2d, 0xd7, 0x30,
    0xe3, 0xa4, 0x10, 0x17, 0xeb, 0xda, 0x29, 0x29, 0xb6, 0x79, 0x3f, 0x76,
    0xf6, 0x19, 0x13, 0x23, 0xb8, 0x10, 0x0a, 0xf9, 0x58, 0xa4, 0xd4, 0x61,
    0x70, 0xbd, 0x04, 0x61, 0x6a, 0x12, 0x8a, 0x17, 0xd5, 0x0a, 0xbd, 0xc5,
    0xbc, 0x30, 0x7c, 0xd6, 0xe9, 0x0c, 0x25, 0x8d, 0x86, 0x40, 0x4f, 0xec,
    0xcc, 0xa3, 0x7e, 0x38, 0xc6, 0x37, 0x11, 0x4f, 0xed, 0xdd, 0x68, 0x31,
    0x8e, 0x4c, 0xd2, 0xb3, 0x01, 0x74, 0xee, 0xbe, 0x75, 0x5e, 0x07, 0x48,
    0x1a, 0x7f, 0x70, 0xff, 0x16, 0x5c, 0x84, 0xc0, 0x79, 0x85, 0xb8, 0x05,
    0xfd, 0x7f, 0xbe, 0x65, 0x11, 0xa3, 0x0f, 0xc0, 0x02, 0xb4, 0xf8, 0x52,
    0x37, 0x39, 0x04, 0xd5, 0xa9, 0x31, 0x7a, 0x18, 0xbf, 0xa0, 0x2a, 0xf4,
    0x12, 0x99, 0xf7, 0xa3, 0x45, 0x82, 0xe3, 0x3c, 0x5e, 0xf5, 0x9d, 0x9e,
    0xb5, 0xc8, 0x9e, 0x7c, 0x2e, 0xc8, 0xa4, 0x9e, 0x4e, 0x08, 0x14, 0x4b,
    0x6d, 0xfd, 0x70, 0x6d, 0x6b, 0x1a, 0x63, 0xbd, 0x64, 0xe6, 0x1f, 0xb7,
    0xce, 0xf0, 0xf2, 0x9f, 0x2e, 0xbb, 0x1b, 0xb7, 0xf2, 0x50, 0x88, 0x73,
    0x92, 0xc2, 0xe2, 0xe3, 0x16, 0x8d, 0x9a, 0x32, 0x02, 0xab, 0x8e, 0x18,
    0xdd, 0xe9, 0x10, 0x11, 0xee, 0x7e, 0x35, 0xab, 0x90, 0xaf, 0x3e, 0x30,
    0x94, 0x7a, 0xd0, 0x33, 0x3d, 0xa7, 0x65, 0x0f, 0xf5, 0xfc, 0x8e, 0x9e,
    0x62, 0xcf, 0x47, 0x44, 0x2c, 0x01, 0x5d, 0xbb, 0x1d, 0xb5, 0x32, 0xd2,
    0x47, 0xd2, 0x38, 0x2e, 0xd0, 0xfe, 0x81, 0xdc, 0x32, 0x6a, 0x1e, 0xb5,
    0xee, 0x3c, 0xd5, 0xfc, 0xe7, 0x81, 0x1d, 0x19, 0xc3, 0x24, 0x42, 0xea,
    0x63, 0x39, 0xa9};

const unsigned int caCertLen = 891;